# Exported from:        http://LAPTOP-9C20LTLG:5516/
# Release version:      22.0.0-20211220-123974
# Date created:         Mon Jul 03 12:12:07 IST 2023

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: AAAA!
spec:
- template: Create Release
  scheduledStartDate: 2023-05-31T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: GS
      type: xlrelease.GroovyScriptTask
      ignoreScriptVariableInterpolation: true
      script: |-
        import com.xebialabs.xlrelease.domain.Release

        for (int i in 1..200) {
         // Exported from:        http://LAPTOP-9C20LTLG:5516/#/templates/Folder10a029efe020464cb887ab5c8260fae6-Release9d3686ea6a8346dc8578e6d4d29a69d8/code
        // Release version:      22.0.0-20211220-123974
        // Date created:         Thu Jun 01 12:12:25 IST 2023

        Release rel1= xlr {
          release("CCC_$i") {
            folder('AAAA!')
            scheduledStartDate Date.parse("yyyy-MM-dd'T'HH:mm:ssZ", '2023-05-31T09:00:00+0530')
            scriptUsername 'admin'
            scriptUserPassword '{aes:v0}QrJnhjYEDxpJ16cR/ovzVLS5Fy+OM/oPKoHVefaUDaA='
            phases {
              phase('New Phase') {
                tasks {
                  script('JS') {
                    script (['''\
        print "Something"
        retrievedRelease = releaseApi.getRelease(getCurrentRelease().id)
        print retrievedRelease.title
        '''])
                  }
                  manual('mt1') {

                  }
                  manual('MT2') {

                  }
                }
              }
            }

          }
        }
        rel1.start()
        }
    - name: CD
      type: delivery.CreateDelivery
    - name: Check Issue
      type: jira.CheckIssue
    color: '#3d6c9e'
  riskProfile: Default risk profile
- template: FF1
  scheduledStartDate: 2023-05-31T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: JS
      type: xlrelease.ScriptTask
      script: |-
        print "Something"
        retrievedRelease = releaseApi.getRelease(getCurrentRelease().id)
        print retrievedRelease.title
    - name: mt1
      type: xlrelease.Task
    - name: MT2
      type: xlrelease.Task
  scriptUsername: admin
  scriptUserPassword: !value "xlrelease_Release_FF1_scriptUserPassword"
  riskProfile: Default risk profile
- template: Process_all
  scheduledStartDate: 2023-05-30T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: JS
      type: xlrelease.ScriptTask
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import ReleasesFilters

        searchCriteria = ReleasesFilters()
        searchCriteria.setPlanned(True)
        releases = []
        response = True
        page = 0
        def validateAndTagReleases(releases):
            for release in releases:
                releasetags = release.tags
                releasetags.append("Another Tag8")
                release.setTags(releasetags)
                releaseApi.updateRelease(release)
                taskId = releaseApi.getActiveTasks(release.id)
                print release.title
        while response == True:
            releaseLoop = releaseApi.searchReleases(searchCriteria, page, 100)
            if len(releaseLoop) != 0:
                releases += releaseLoop
                page += 1
            else:
                response = False
        print len(releases)
        validateAndTagReleases(releases)
    - name: MT
      type: xlrelease.Task
  scriptUsername: admin
  scriptUserPassword: !value "xlrelease_Release_Process_all_scriptUserPassword"
  riskProfile: Default risk profile
- template: Start_release
  scheduledStartDate: 2023-05-30T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: JS
      type: xlrelease.ScriptTask
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import ReleasesFilters

        searchCriteria = ReleasesFilters()
        searchCriteria.setPlanned(True)

        response = True
        page = 0
        def validateAndTagReleases(releases):
            for release in releases:
                releaseApi.start(release)
                print release.title
        while response == True:
            releases = releaseApi.searchReleases(searchCriteria, page, 10)
            if len(releases) != 0:
                validateAndTagReleases(releases)
                page += 1
            else:
                response = False
    - name: MT
      type: xlrelease.Task
  riskProfile: Default risk profile
- template: Test_Blocker
  scheduledStartDate: 2023-06-05T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: Clone
      type: xlrelease.UnknownType
      flagStatus: ATTENTION_NEEDED
      flagComment: Task 'Clone' in Phase 'New Phase' has been replaced by an unknown
        task. The task of type 'gitlab.cloneRepository' could not be found because
        of a missing plugin.
  scriptUsername: admin
  scriptUserPassword: !value "xlrelease_Release_Test_Blocker_scriptUserPassword"
  riskProfile: Default risk profile
- template: WIth_limit
  scheduledStartDate: 2023-06-01T09:00:00+05:30
  phases:
  - phase: New Phase
    tasks:
    - name: JS (copy)
      type: xlrelease.ScriptTask
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import ReleasesFilters

        searchCriteria = ReleasesFilters()
        searchCriteria.setInProgress(True)

        response = True
        page = 0
        def validateAndTagReleases(releases):
            print len(releases)
            for r in releases:
                releasetags = r.tags
                releasetags.append("Tag6")
                r.setTags(releasetags)
                releaseApi.updateRelease(r)
                taskId = releaseApi.getActiveTasks(release.id)
                print r.title
                print len(r.getActiveTasks())
                print str(r.getActiveTasks()[0])
                print r.getActiveTasks()[0].id
                print r.getActiveTasks()[0].status
                print r.getActiveTasks()[0].type
                print r.getActiveTasks()[0].title
                print r.getActiveTasks()[0].comments
        while response == True:
            releases = releaseApi.searchReleases(searchCriteria, page, 50)
            if len(releases) != 0:
                validateAndTagReleases(releases)
                page += 1
            else:
                response = False
    - name: MT
      type: xlrelease.Task
    - name: JS
      type: xlrelease.ScriptTask
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import ReleasesFilters

        searchCriteria = ReleasesFilters()
        searchCriteria.setPlanned(True)

        response = True
        page = 0
        def validateAndTagReleases(releases):
            print len(releases)
            for r in releases:
                releasetags = r.tags
                releasetags.append("Tag6")
                r.setTags(releasetags)
                releaseApi.updateRelease(r)
                taskId = releaseApi.getActiveTasks(release.id)
                print r.title
        while response == True:
            releases = releaseApi.searchReleases(searchCriteria, page, 50)
            if len(releases) != 0:
                validateAndTagReleases(releases)
                page += 1
            else:
                response = False
  scriptUsername: admin
  scriptUserPassword: !value "xlrelease_Release_WIth_limit_scriptUserPassword"
  riskProfile: Default risk profile
